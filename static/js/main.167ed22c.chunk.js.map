{"version":3,"sources":["components/InputFile.tsx","components/Inputs.tsx","components/Options.jsx","components/Loader.jsx","components/Table.tsx","pages/Home.jsx","components/App.jsx","reportWebVitals.ts","index.tsx"],"names":["InputFile","props","htmlFor","className","type","id","accept","onChange","e","handleFileUpload","Inputs","Options","handleDates","startDate","endDate","setState","handleDate","state","bind","this","options","map","option","name","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","React","Component","Loader","role","Table","filterOptions","data","columns","dataSource","allowPaging","allowResizing","allowFiltering","pageSettings","pageSize","filterSettings","column","field","headerText","selector","width","services","Page","Sort","Filter","Group","Resize","Home","setData","jsonObj","forEach","item","push","entries","Object","allData","loading","checkIfIsSponsors","includes","handleXls","file","reader","FileReader","onload","workbook","XLSX","read","result","SheetNames","sheet","rowObject","utils","sheet_to_row_object_array","Sheets","readAsBinaryString","handleCvs","csvToJson","noheader","output","delimiter","colParser","date","Date","fromString","then","readAsText","loaderVisible","target","files","split","slice","filterByDate","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.167ed22c.chunk.js","sourcesContent":["function InputFile(props){\n    return(\n        <>\n        <label htmlFor='formFileSm' className=\"form-label\">Insert csv Or xls</label>\n        <input \n        className=\"form-control form-control-sm\" \n        type=\"file\" \n        id=\"formFilesm\"\n        accept=\".csv,.xlsx,.xls\"\n        onChange={(e)=>props.handleFileUpload(e)}/>\n        </>\n    );\n}\nexport default InputFile;","import React from \"react\";\nimport InputFile from \"./InputFile\";\nfunction Inputs(props){\n    const {handleFileUpload} = props;\n    return(\n        <>\n            <div className=\"mb-5\">\n                <div className=\"container-flow\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <InputFile handleFileUpload={handleFileUpload}/>\n                        </div>\n                        <div className=\"col\">\n                            <InputFile handleFileUpload={handleFileUpload}/>\n                        </div>\n                        <div className=\"col\">\n                            <InputFile handleFileUpload={handleFileUpload}/>\n                        </div>\n                    </div>\n                </div>            \n            </div>\n        </>\n    )\n}\nexport default Inputs;","import React from \"react\";\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DateRangePicker} from 'react-dates';\nimport './css/Options.css';\nclass Options extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            startDate:null,\n            endDate:null,\n        }\n        this.handleDates.bind(this);\n    }\n    handleDates=(startDate,endDate)=>{\n        this.setState({startDate,endDate});\n        this.props.handleDate(startDate,endDate);\n    }\n    \n    render(){\n        return(\n            <>\n            <div className=\"container mb-5\">\n                <div className=\"row\">\n                    <div className=\"col options\">\n                        <select>\n                        {this.props.options.map((option)=>{\n                            return(<option>{option.name}</option>)\n                        })}\n                        </select>\n                    </div>\n                        <div className=\"col\">\n                        <DateRangePicker\n                        startDate={this.state.startDate} // momentPropTypes.momentObj or null,\n                        startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n                        endDate={this.state.endDate} // momentPropTypes.momentObj or null,\n                        endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n                        onDatesChange={({ startDate, endDate }) => this.handleDates(startDate, endDate)} // PropTypes.func.isRequired,\n                        focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n                        onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\n                        />\n                    </div>\n                </div>\n            </div>\n            </>\n        )\n    }\n}\nexport default Options;","const Loader = ()=>{\n    return(\n        <>\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n        </>\n    )\n}\nexport default Loader;","import React from 'react';\nimport { ColumnDirective, \n    ColumnsDirective,\n    Grid, GridComponent,\n    Inject,Page, \n    Sort, Filter,\n    FilterSettingsModel,\n    Group,Resize} from '@syncfusion/ej2-react-grids';\n\n    type TableProps={\n      data:[],\n      columns:[]\n    }\n\n    type TableState={\n      filterOptions:FilterSettingsModel,\n    }\n\nclass Table extends React.Component<TableProps, TableState>{\n  constructor(props: TableProps){\n    super(props);\n    this.state={\n      filterOptions:{\n        type: 'Menu'\n      },\n    }\n  }\n    render(){\n      const {data,columns} = this.props\n        return(\n            <>\n            <GridComponent \n              dataSource={data} \n              allowPaging={true}\n              allowResizing={true}\n              allowFiltering={true}\n              pageSettings={{pageSize:6}}\n              filterSettings={this.state.filterOptions}\n              >\n                <ColumnsDirective>\n                {\n                  columns.map((column: any) =>{\n                    return(<ColumnDirective field={column.name} headerText={column.selector} width=\"150\"></ColumnDirective>)\n                  })\n                }\n                </ColumnsDirective>\n                <Inject services={[Page, Sort, Filter, Group,Resize]}/>\n              </GridComponent>\n            </>\n        )\n    }\n}\nexport default Table;","// Dependacies\nimport React from 'react';\nimport csvToJson from 'csvtojson';\nimport XLSX from 'xlsx';\n\n// Components\nimport Inputs from '../components/Inputs';\nimport Options from '../components/Options';\nimport Loader from \"../components/Loader\";\nimport Table from '../components/Table.tsx';\n\nclass Home extends React.Component {\n    constructor(props){\n        super();\n        this.state={\n          loading:true,\n          allData:[],\n          data:[],\n          columns:[]\n        }\n        this.handleFileUpload.bind(this);\n        this.handleCvs.bind(this);\n        this.handleXls.bind(this);\n        this.setData.bind(this);\n        this.checkIfIsSponsors.bind(this);\n        this.handleDate.bind(this);\n    }\n\n\nsetData = (jsonObj)=>{\n  let data=[];\n        jsonObj.forEach(item=>{\n            data.push(item);\n        })\n        const entries = Object.entries(data[0]);\n        const columns=[];\n        entries.forEach((column)=>{\n          columns.push({\n            name:column[0],\n            selector:column[0],\n          })\n        });\n        this.setState({allData:data,data:data, columns:columns, loading:false})\n}\n\ncheckIfIsSponsors = (item)=>{\n  const type_of_contribution = item[\"Descripción de la operación (reason)\"];\n  if(type_of_contribution.includes('Aporte patrocinio para')){\n    return true;\n  }\n  else{\n    return false;\n  }\n}\n\nhandleXls = (file)=>{\n  const reader = new FileReader();\n      reader.onload = ()=>{\n        const workbook = XLSX.read(reader.result,{\n          type:\"binary\"\n        });\n        workbook.SheetNames.forEach(sheet=>{\n          let rowObject = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheet]);\n          this.setData(rowObject)\n        })\n      }\n      reader.readAsBinaryString(file);\n}\nhandleCvs = (file)=>{\n  const reader = new FileReader();\n      reader.onload = ()=>{\n        const data = reader.result;\n        csvToJson({\n          noheader:false,\n          output: \"json\",\n          delimiter:\"auto\",\n          colParser:{\n            \"Fecha de compra\":function(date){\n              return new Date(date);\n            }\n          }\n      })\n      .fromString(data)\n      .then((jsonObj)=>{\n        this.setData(jsonObj)\n      })\n    }\n    reader.readAsText(file);\n}\n\n\nhandleFileUpload = (e)=>{\n    this.setState({loaderVisible:true})\n    const file = e.target.files[0];\n    const file_name_extension = file.name.split('.').slice(1);\n    if(file_name_extension[0]==='csv')\n    {\n      this.handleCvs(file);\n    }else{\n      this.handleXls(file);\n    }\n  }\n\n  handleDate = (startDate,endDate)=>{\n    if((startDate && endDate)!== null){\n      this.filterByDate(startDate,endDate);\n    }\n  }\n  render(){\n    const{\n      loading,\n      data,\n      columns,\n    }=this.state;\n      return (\n      <>\n        <div className=\"container\">\n          <Inputs handleFileUpload={this.handleFileUpload}/>\n          {loading\n           ?<Loader/>\n           :<>\n              <Options handleDate={this.handleDate} pageSettings={{pageSize:8}} options={columns}/>\n              <Table data={data} columns={columns}></Table>\n            </>\n          }\n        </div>\n      </>\n      );\n  }\n}\nexport default Home;\n\n","import React from 'react';\nimport Home from '../pages/Home';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './css/App.css'\nfunction App() {\n  return (\n    <>\n      <Home></Home>\n    </>\n  )\n}\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n  "],"sourceRoot":""}